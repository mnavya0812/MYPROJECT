package com.uhc.myuhc.servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.jcr.Node;
import javax.jcr.Session;
import javax.servlet.ServletOutputStream;

import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.sling.SlingServlet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.resource.ResourceResolverFactory;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.uhc.myuhc.api.AssetCheckService;

/**
 * The Class MyUHCOauthTokenServlet.
 */
@SlingServlet(paths = "/apps/assetsSearch", methods = "GET")

public class AssetsSearchServlet extends SlingAllMethodsServlet {

	//private static final String PATH = "/etc/segmentation/myuhc20/custom-messages/medical-custom-messages/FullTimePVRC/jcr:content/traits/andpar/or/orpar";

	private static final Logger logger = LoggerFactory.getLogger(AssetsSearchServlet.class);
	@Reference
	private ResourceResolverFactory resolverFactory;
	@Reference
	private AssetCheckService assetSearchService;

	@Override
	protected void doPost(SlingHttpServletRequest request, SlingHttpServletResponse response) {

		ResourceResolver resolver = null;
		try {

		
			Workbook workbook = assetSearchService.checkAssets();
            response.setContentType("application/vnd.ms-excel");
            response.setHeader("Expires", "0");
            response.setHeader("Cache-Control", "must-revalidate, post-check=0, pre-check=0");
            response.setHeader("Pragma", "public");
            response.setHeader("Content-Disposition", "attachment; filename=" + "AssestSearchResults.xlsx");
            try (ServletOutputStream out = response.getOutputStream()) {
                workbook.write(out);
                out.flush();
            } catch (Exception ex) {
            	logger.error("Error generating excel export for "+request.getResource().getPath(), ex);
                throw ex;
            }
			
		} catch (Exception e) {
			logger.error("============CreatePVRC - doPost  - Exception =======" , e);

		} //

	}

	@Override
	protected void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) {

		doPost(request, response);
	}

}
